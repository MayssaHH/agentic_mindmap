{
  "metadata": {
    "thread_id": "test-001",
    "created_at": "2025-10-04T18:23:54.622036",
    "source_file": "C:/Users/bazzzyy/Downloads/C2+-+Large+Language+Models-1-20.pdf",
    "total_pages": 20,
    "total_topics": 4,
    "graph_nodes": 49,
    "graph_edges": 53
  },
  "processing_results": {
    "page_summaries": [
      {
        "page_number": 1,
        "summary": "- **Course Title**: EECE 503P/798S: Agentic Systems\n- **Topic**: C2 - Large Language Models\n- **Institution**: American University of Beirut\n- **Semester**: Fall 2025\n\nThis slide introduces a lecture or module focused on large language models within the context of agentic systems."
      },
      {
        "page_number": 2,
        "summary": "**Reflection on Course Feedback**\n\n- **Project and Assignment Challenges**\n  - Difficulty in generating innovative project ideas.\n  - First assignment perceived as too theoretical and misaligned with class explanations.\n\n- **Pace and Complexity of Material**\n  - Instructor to provide introduction and conclusion.\n  - Fast pace and non-intuitive concepts require multiple reviews.\n  - Students without strong AI background face challenges with theory.\n\n- **Uncertainty Around Structure & Expectations**\n  - Confusion about exam structure and early project initiation amid ongoing concept introduction."
      },
      {
        "page_number": 3,
        "summary": "**Lesson Objectives Summary:**\n\n- **LLMs Definition & Evolution**: Understand LLMs and their development from earlier AI.\n- **Model Characteristics**: Identify what makes a model \"large\" (parameters, data, compute).\n- **Emergent Behaviors**: Explore behaviors beyond text prediction.\n- **Prompting Techniques**: Learn techniques like zero-shot, few-shot, CoT, multi-step.\n- **Architectures**: Compare different LLM architectures (encoder-only, decoder-only, etc.).\n- **Recent Advancements**: Review advancements in context windows, scaling laws, reasoning.\n- **Fine-tuning & Evaluation**: Introduce methods like instruction tuning, RLHF, DPO.\n- **Open vs. Closed Source**: Distinguish between open- and closed-source LLMs, with a focus on Hugging Face."
      },
      {
        "page_number": 4,
        "summary": "- **Course Title**: Agentic Systems (EECE 503P/798S)\n- **Institution**: American University of Beirut\n- **Course Timeline**:\n  1. **Introduction to Generative AI**\n  2. **Deep Dive to LLMs** *(Current Position)*\n  3. **Introduction to Agents**\n  4. **Deep Dive into Agent Components**\n  5. **Deep Dive into Agent Architectures**\n  6. **Evaluation and Scalability of Agent Systems**"
      },
      {
        "page_number": 5,
        "summary": "- **Title**: Introduction\n- **Course**: EECE 503P/798S: Agentic Systems\n- **Institution**: American University of Beirut\n\nThis slide serves as an introductory page for a lecture or presentation on agentic systems, part of a course at the American University of Beirut."
      },
      {
        "page_number": 6,
        "summary": "- **Early Foundations**: Markov chains in early 20th century laid groundwork for probabilistic models.\n- **Deep Learning Rise**: Late 2000s breakthroughs enabled complex pattern recognition.\n- **VAEs/GANs (2014)**: Introduced powerful generative techniques for images and beyond.\n- **Transformer (2017)**: Revolutionized natural language understanding and generation.\n- **LLMs (2022)**: OpenAI's release sparked rapid innovation and widespread adoption."
      },
      {
        "page_number": 7,
        "summary": "- **Title**: From Transformers to LLMs\n- **Context**: Part of a course on Agentic Systems (EECE 503P/798S)\n- **Institution**: American University of Beirut\n- **Focus**: Transition and development from Transformer models to Large Language Models (LLMs)\n\nThis slide likely introduces a section discussing the evolution and advancements in AI models, specifically focusing on the progression from Transformer architectures to more advanced LLMs."
      },
      {
        "page_number": 8,
        "summary": "**What are LLMs?**\n\n- **Definition**: Neural networks trained on massive text corpora to model language distribution.\n- **Capabilities**: \n  - Text generation\n  - Translation\n  - Summarization\n  - Question answering\n- **Structure**: Not all LLMs are transformer-based; variations exist.\n- **Visual**: Diagram illustrating tasks from basic language modeling to complex question answering."
      },
      {
        "page_number": 9,
        "summary": "**What Makes a Language Model \"Large\"?**\n\n- **Basic Structure**: \n  - A language model consists of an encoder and a decoder block.\n  - The original transformer architecture is a standard language model, not large.\n\n- **Large Language Model (LLM)**:\n  - Achieved by stacking hundreds of encoder and decoder blocks.\n  - Results in millions to billions of training parameters.\n\n- **Visual Element**: \n  - LLM Architecture Pyramid:\n    - Base: Deep Learning Foundation (parameter count).\n    - Middle: Parameter Scale (millions to billions).\n    - Top: Training Data and Text Generation.\n\nThis structure highlights the scale and complexity required for a language model to be considered \"large.\""
      },
      {
        "page_number": 10,
        "summary": "**LLM Input and Output Process**\n\n- **Input Text**: Initial data fed into the system.\n- **Tokenization**: Converts input text into tokens.\n- **Embedding**: Transforms tokens into numerical vectors.\n- **LLM Core**: Utilizes attention and multi-layer perceptron layers to process embeddings.\n- **Probability Map**: Generates probabilities for next token predictions.\n- **Token Decoding**: Converts probabilities back into text tokens.\n- **Output Text**: Produced text, loop continues if not end token.\n- **End Token**: Marks completion of output generation.\n\nThis flow outlines the sequence from input to output in a language model."
      },
      {
        "page_number": 11,
        "summary": "- **Topic**: Purpose of LLMs (Large Language Models)\n- **Question**: Why were LLMs created?\n- **Context**: Part of a lecture on Agentic Systems\n- **Institution**: American University of Beirut\n\nThis slide introduces a discussion on the reasons behind the creation of Large Language Models."
      },
      {
        "page_number": 12,
        "summary": "- **Challenge of Language**: Language is difficult for computers due to its unstructured nature.\n- **Loss of Meaning**: Text loses meaning when reduced to binary form.\n- **AI Focus**: Language AI aims to structure language for easier processing.\n- **Process Overview**:\n  - **Input**: Unstructured text data.\n  - **AI Processing**: Converts text into structured forms.\n  - **Outputs**:\n    - **Text Output**: Generative modeling.\n    - **Embeddings**: Numeric representations.\n    - **Classification**: Identifying targets."
      },
      {
        "page_number": 13,
        "summary": "**From Transformers to Large Models**\n\n- **Objective**: Develop a text model efficient in diverse tasks (e.g., answering questions, creative writing, coding, multi-language generation).\n- **Key Requirements**:\n  - **Information Capacity**: Model must hold extensive information within its weights.\n  - **Parameters**: A large number of parameters is essential to store vast information.\n- **Components**:\n  - **Transformers**: Facilitate understanding through attention.\n  - **Attention Mechanism**: Enhances text comprehension and processing.\n  - **Large Parameters**: Enable models to retain extensive information.\n\n**Visual Element**: Diagram illustrating the relationship between transformers, attention mechanisms, and large parameters in creating an efficient text model."
      },
      {
        "page_number": 14,
        "summary": "- **Topic**: Emergent Behaviors of Large Language Models (LLMs)\n- **Purpose**: Originally designed for high accuracy in traditional text tasks.\n- **Key Characteristics**:\n  - **Predictive Text Modeling**: Trained to predict the next word.\n  - **Language Understanding**: Captures patterns based on context.\n  - **Initial Applications**: Includes autocomplete, translation, classification, summarization."
      },
      {
        "page_number": 15,
        "summary": "**Emergent Behaviors of LLMs**\n\n- **Unexpected Capabilities**: LLMs, though trained to predict text, have developed advanced abilities.\n- **Hierarchical Skills**:\n  - **In-context Learning**: Basic ability to learn from context.\n  - **Chain-of-thought Reasoning**: Logical progression in reasoning.\n  - **Code Generation**: Ability to generate code.\n  - **Tool Use**: Utilizing tools effectively.\n  - **Theory of Mind**: Understanding others' perspectives.\n  - **Compositional Generalization**: Creating new ideas from known concepts.\n- **Task Solving**: Achieving new tasks using prompts, without gradient updates."
      },
      {
        "page_number": 16,
        "summary": "**Emergent Behaviors of LLMs**\n\n- **In-context Learning**: Foundation of LLM capabilities.\n- **Chain-of-thought Reasoning**: Builds on in-context learning for logical processing.\n- **Code Generation**: Ability to create code from prompts.\n- **Tool Use**: Utilization of external tools.\n- **Theory of Mind**: Understanding and predicting others' thoughts.\n- **Compositional Generalization**: Advanced synthesis of information.\n\n**Key Insight**: Step-by-step logic emerges with correct prompting."
      },
      {
        "page_number": 17,
        "summary": "**Emergent Behaviors of LLMs**\n\n- **In-context Learning**: Foundation of learning from context.\n- **Chain-of-thought Reasoning**: Logical progression in reasoning.\n- **Code Generation**: Ability to write syntactically correct and functional code.\n- **Tool Use**: Utilizing tools effectively.\n- **Theory of Mind**: Understanding others' perspectives.\n- **Compositional Generalization**: Combining known concepts in new ways.\n\n**Visual Structure**: Pyramid representing hierarchical development of capabilities."
      },
      {
        "page_number": 18,
        "summary": "**Emergent Behaviors of LLMs**\n\n- **In-context Learning**: Foundation of LLM capabilities.\n- **Chain-of-thought Reasoning**: Logical progression in problem-solving.\n- **Code Generation**: Ability to create and understand code.\n- **Tool Use**: Utilizing external tools like APIs, calculators, and browsers.\n- **Theory of Mind**: Understanding and predicting others' thoughts.\n- **Compositional Generalization**: Combining known concepts to form new ideas.\n\n**Visual Structure**: Pyramid representing hierarchical development of capabilities."
      },
      {
        "page_number": 19,
        "summary": "**Emergent Behaviors of LLMs**\n\n- **In-context Learning**: Foundation of LLM capabilities.\n- **Chain-of-thought Reasoning**: Logical progression in responses.\n- **Code Generation**: Ability to produce code.\n- **Tool Use**: Utilizing external tools effectively.\n- **Theory of Mind**: Inferring others' beliefs or knowledge.\n- **Compositional Generalization**: Advanced understanding and application of concepts.\n\nThese behaviors illustrate the progressive capabilities of large language models (LLMs)."
      },
      {
        "page_number": 20,
        "summary": "**Emergent Behaviors of LLMs**\n\n- **In-context Learning**: Foundation for understanding tasks.\n- **Chain-of-thought Reasoning**: Logical progression in problem-solving.\n- **Code Generation**: Creating code from learned patterns.\n- **Tool Use**: Applying tools effectively.\n- **Theory of Mind**: Understanding perspectives and intentions.\n- **Compositional Generalization**: Combining learned patterns in novel ways.\n\n**Key Concept**: Solving tasks by integrating and applying learned patterns innovatively."
      }
    ],
    "topics": {
      "topic_names": [
        "Course Introduction and Structure",
        "Course Feedback and Challenges",
        "Introduction to Large Language Models (LLMs)",
        "Emergent Behaviors of Large Language Models"
      ],
      "topic_details": [
        {
          "topic_title": "Course Introduction and Structure",
          "slide_numbers": [
            1,
            4,
            5
          ],
          "summaries": [
            "Course Title: EECE 503P/798S: Agentic Systems - Topic: C2 - Large Language Models - Institution: American University of Beirut - Semester: Fall 2025. This slide introduces a lecture or module focused on large language models within the context of agentic systems.",
            "Course Title: Agentic Systems (EECE 503P/798S) - Institution: American University of Beirut - Course Timeline: 1. Introduction to Generative AI 2. Deep Dive to LLMs (Current Position) 3. Introduction to Agents 4. Deep Dive into Agent Components 5. Deep Dive into Agent Architectures 6. Evaluation and Scalability of Agent Systems",
            "Title: Introduction - Course: EECE 503P/798S: Agentic Systems - Institution: American University of Beirut. This slide serves as an introductory page for a lecture or presentation on agentic systems, part of a course at the American University of Beirut."
          ]
        },
        {
          "topic_title": "Course Feedback and Challenges",
          "slide_numbers": [
            2
          ],
          "summaries": [
            "Reflection on Course Feedback - Project and Assignment Challenges: Difficulty in generating innovative project ideas. First assignment perceived as too theoretical and misaligned with class explanations. - Pace and Complexity of Material: Instructor to provide introduction and conclusion. Fast pace and non-intuitive concepts require multiple reviews. Students without strong AI background face challenges with theory. - Uncertainty Around Structure & Expectations: Confusion about exam structure and early project initiation amid ongoing concept introduction."
          ]
        },
        {
          "topic_title": "Introduction to Large Language Models (LLMs)",
          "slide_numbers": [
            3,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13
          ],
          "summaries": [
            "Lesson Objectives Summary: LLMs Definition & Evolution: Understand LLMs and their development from earlier AI. Model Characteristics: Identify what makes a model 'large' (parameters, data, compute). Emergent Behaviors: Explore behaviors beyond text prediction. Prompting Techniques: Learn techniques like zero-shot, few-shot, CoT, multi-step. Architectures: Compare different LLM architectures (encoder-only, decoder-only, etc.). Recent Advancements: Review advancements in context windows, scaling laws, reasoning. Fine-tuning & Evaluation: Introduce methods like instruction tuning, RLHF, DPO. Open vs. Closed Source: Distinguish between open- and closed-source LLMs, with a focus on Hugging Face.",
            "Early Foundations: Markov chains in early 20th century laid groundwork for probabilistic models. Deep Learning Rise: Late 2000s breakthroughs enabled complex pattern recognition. VAEs/GANs (2014): Introduced powerful generative techniques for images and beyond. Transformer (2017): Revolutionized natural language understanding and generation. LLMs (2022): OpenAI's release sparked rapid innovation and widespread adoption.",
            "Title: From Transformers to LLMs - Context: Part of a course on Agentic Systems (EECE 503P/798S) - Institution: American University of Beirut - Focus: Transition and development from Transformer models to Large Language Models (LLMs). This slide likely introduces a section discussing the evolution and advancements in AI models, specifically focusing on the progression from Transformer architectures to more advanced LLMs.",
            "What are LLMs? - Definition: Neural networks trained on massive text corpora to model language distribution. - Capabilities: Text generation, Translation, Summarization, Question answering. - Structure: Not all LLMs are transformer-based; variations exist. - Visual: Diagram illustrating tasks from basic language modeling to complex question answering.",
            "What Makes a Language Model 'Large'? - Basic Structure: A language model consists of an encoder and a decoder block. The original transformer architecture is a standard language model, not large. - Large Language Model (LLM): Achieved by stacking hundreds of encoder and decoder blocks. Results in millions to billions of training parameters. - Visual Element: LLM Architecture Pyramid: Base: Deep Learning Foundation (parameter count). Middle: Parameter Scale (millions to billions). Top: Training Data and Text Generation. This structure highlights the scale and complexity required for a language model to be considered 'large.'",
            "LLM Input and Output Process - Input Text: Initial data fed into the system. - Tokenization: Converts input text into tokens. - Embedding: Transforms tokens into numerical vectors. - LLM Core: Utilizes attention and multi-layer perceptron layers to process embeddings. - Probability Map: Generates probabilities for next token predictions. - Token Decoding: Converts probabilities back into text tokens. - Output Text: Produced text, loop continues if not end token. - End Token: Marks completion of output generation. This flow outlines the sequence from input to output in a language model.",
            "Topic: Purpose of LLMs (Large Language Models) - Question: Why were LLMs created? - Context: Part of a lecture on Agentic Systems - Institution: American University of Beirut. This slide introduces a discussion on the reasons behind the creation of Large Language Models.",
            "Challenge of Language: Language is difficult for computers due to its unstructured nature. Loss of Meaning: Text loses meaning when reduced to binary form. AI Focus: Language AI aims to structure language for easier processing. Process Overview: Input: Unstructured text data. AI Processing: Converts text into structured forms. Outputs: Text Output: Generative modeling. Embeddings: Numeric representations. Classification: Identifying targets.",
            "From Transformers to Large Models - Objective: Develop a text model efficient in diverse tasks (e.g., answering questions, creative writing, coding, multi-language generation). - Key Requirements: Information Capacity: Model must hold extensive information within its weights. Parameters: A large number of parameters is essential to store vast information. - Components: Transformers: Facilitate understanding through attention. Attention Mechanism: Enhances text comprehension and processing. Large Parameters: Enable models to retain extensive information. Visual Element: Diagram illustrating the relationship between transformers, attention mechanisms, and large parameters in creating an efficient text model."
          ]
        },
        {
          "topic_title": "Emergent Behaviors of Large Language Models",
          "slide_numbers": [
            14,
            15,
            16,
            17,
            18,
            19,
            20
          ],
          "summaries": [
            "Topic: Emergent Behaviors of Large Language Models (LLMs) - Purpose: Originally designed for high accuracy in traditional text tasks. - Key Characteristics: Predictive Text Modeling: Trained to predict the next word. Language Understanding: Captures patterns based on context. Initial Applications: Includes autocomplete, translation, classification, summarization.",
            "Emergent Behaviors of LLMs - Unexpected Capabilities: LLMs, though trained to predict text, have developed advanced abilities. - Hierarchical Skills: In-context Learning: Basic ability to learn from context. Chain-of-thought Reasoning: Logical progression in reasoning. Code Generation: Ability to generate code. Tool Use: Utilizing tools effectively. Theory of Mind: Understanding others' perspectives. Compositional Generalization: Creating new ideas from known concepts. Task Solving: Achieving new tasks using prompts, without gradient updates.",
            "Emergent Behaviors of LLMs - In-context Learning: Foundation of LLM capabilities. - Chain-of-thought Reasoning: Builds on in-context learning for logical processing. - Code Generation: Ability to create code from prompts. - Tool Use: Utilization of external tools. - Theory of Mind: Understanding and predicting others' thoughts. - Compositional Generalization: Advanced synthesis of information. Key Insight: Step-by-step logic emerges with correct prompting.",
            "Emergent Behaviors of LLMs - In-context Learning: Foundation of learning from context. - Chain-of-thought Reasoning: Logical progression in reasoning. - Code Generation: Ability to write syntactically correct and functional code. - Tool Use: Utilizing tools effectively. - Theory of Mind: Understanding others' perspectives. - Compositional Generalization: Combining known concepts in new ways. Visual Structure: Pyramid representing hierarchical development of capabilities.",
            "Emergent Behaviors of LLMs - In-context Learning: Foundation of LLM capabilities. - Chain-of-thought Reasoning: Logical progression in problem-solving. - Code Generation: Ability to create and understand code. - Tool Use: Utilizing external tools like APIs, calculators, and browsers. - Theory of Mind: Understanding and predicting others' thoughts. - Compositional Generalization: Combining known concepts to form new ideas. Visual Structure: Pyramid representing hierarchical development of capabilities.",
            "Emergent Behaviors of LLMs - In-context Learning: Foundation of LLM capabilities. - Chain-of-thought Reasoning: Logical progression in responses. - Code Generation: Ability to produce code. - Tool Use: Utilizing external tools effectively. - Theory of Mind: Inferring others' beliefs or knowledge. - Compositional Generalization: Advanced understanding and application of concepts. These behaviors illustrate the progressive capabilities of large language models (LLMs).",
            "Emergent Behaviors of LLMs - In-context Learning: Foundation for understanding tasks. - Chain-of-thought Reasoning: Logical progression in problem-solving. - Code Generation: Creating code from learned patterns. - Tool Use: Applying tools effectively. - Theory of Mind: Understanding perspectives and intentions. - Compositional Generalization: Combining learned patterns in novel ways. Key Concept: Solving tasks by integrating and applying learned patterns innovatively."
          ]
        }
      ]
    },
    "final_graph": {
      "nodes": [
        {
          "id": "node_1",
          "title": "Course Introduction and Structure",
          "type": "central"
        },
        {
          "id": "node_2",
          "title": "EECE 503P/798S",
          "type": "subnode"
        },
        {
          "id": "node_3",
          "title": "Agentic Systems",
          "type": "subnode"
        },
        {
          "id": "node_4",
          "title": "Large Language Models",
          "type": "subnode"
        },
        {
          "id": "node_5",
          "title": "American University of Beirut",
          "type": "subnode"
        },
        {
          "id": "node_6",
          "title": "Fall 2025",
          "type": "subnode"
        },
        {
          "id": "node_7",
          "title": "Course Timeline",
          "type": "subnode"
        },
        {
          "id": "node_8",
          "title": "Introduction to Generative AI",
          "type": "subnode"
        },
        {
          "id": "node_9",
          "title": "Deep Dive to LLMs",
          "type": "subnode"
        },
        {
          "id": "node_10",
          "title": "Introduction to Agents",
          "type": "subnode"
        },
        {
          "id": "node_11",
          "title": "Agent Components",
          "type": "subnode"
        },
        {
          "id": "node_12",
          "title": "Agent Architectures",
          "type": "subnode"
        },
        {
          "id": "node_13",
          "title": "Evaluation and Scalability",
          "type": "subnode"
        },
        {
          "id": "node_14",
          "title": "Course Feedback and Challenges",
          "type": "central"
        },
        {
          "id": "node_15",
          "title": "Project Challenges",
          "type": "subnode"
        },
        {
          "id": "node_16",
          "title": "Assignment Challenges",
          "type": "subnode"
        },
        {
          "id": "node_17",
          "title": "Pace and Complexity",
          "type": "subnode"
        },
        {
          "id": "node_18",
          "title": "Structure & Expectations",
          "type": "subnode"
        },
        {
          "id": "node_19",
          "title": "Introduction to Large Language Models (LLMs)",
          "type": "central"
        },
        {
          "id": "node_20",
          "title": "LLMs Definition & Evolution",
          "type": "subnode"
        },
        {
          "id": "node_21",
          "title": "Model Characteristics",
          "type": "subnode"
        },
        {
          "id": "node_22",
          "title": "Emergent Behaviors",
          "type": "subnode"
        },
        {
          "id": "node_23",
          "title": "Prompting Techniques",
          "type": "subnode"
        },
        {
          "id": "node_24",
          "title": "LLM Architectures",
          "type": "subnode"
        },
        {
          "id": "node_25",
          "title": "Recent Advancements",
          "type": "subnode"
        },
        {
          "id": "node_26",
          "title": "Fine-tuning & Evaluation",
          "type": "subnode"
        },
        {
          "id": "node_27",
          "title": "Open vs. Closed Source",
          "type": "subnode"
        },
        {
          "id": "node_28",
          "title": "Early Foundations",
          "type": "subnode"
        },
        {
          "id": "node_29",
          "title": "Deep Learning Rise",
          "type": "subnode"
        },
        {
          "id": "node_30",
          "title": "VAEs/GANs (2014)",
          "type": "subnode"
        },
        {
          "id": "node_31",
          "title": "Transformer (2017)",
          "type": "subnode"
        },
        {
          "id": "node_32",
          "title": "LLMs (2022)",
          "type": "subnode"
        },
        {
          "id": "node_33",
          "title": "What are LLMs?",
          "type": "subnode"
        },
        {
          "id": "node_34",
          "title": "LLM Input/Output Process",
          "type": "subnode"
        },
        {
          "id": "node_35",
          "title": "Purpose of LLMs",
          "type": "subnode"
        },
        {
          "id": "node_36",
          "title": "Challenge of Language",
          "type": "subnode"
        },
        {
          "id": "node_37",
          "title": "From Transformers to Large Models",
          "type": "subnode"
        },
        {
          "id": "node_38",
          "title": "Emergent Behaviors of LLMs",
          "type": "central"
        },
        {
          "id": "node_39",
          "title": "Predictive Text Modeling",
          "type": "subnode"
        },
        {
          "id": "node_40",
          "title": "Language Understanding",
          "type": "subnode"
        },
        {
          "id": "node_41",
          "title": "Initial Applications",
          "type": "subnode"
        },
        {
          "id": "node_42",
          "title": "Unexpected Capabilities",
          "type": "subnode"
        },
        {
          "id": "node_43",
          "title": "In-context Learning",
          "type": "subnode"
        },
        {
          "id": "node_44",
          "title": "Chain-of-thought Reasoning",
          "type": "subnode"
        },
        {
          "id": "node_45",
          "title": "Code Generation",
          "type": "subnode"
        },
        {
          "id": "node_46",
          "title": "Tool Use",
          "type": "subnode"
        },
        {
          "id": "node_47",
          "title": "Theory of Mind",
          "type": "subnode"
        },
        {
          "id": "node_48",
          "title": "Compositional Generalization",
          "type": "subnode"
        },
        {
          "id": "node_49",
          "title": "Task Solving",
          "type": "subnode"
        }
      ],
      "edges": [
        {
          "id": "edge_1",
          "from": "node_1",
          "to": "node_2",
          "label": "course code"
        },
        {
          "id": "edge_2",
          "from": "node_1",
          "to": "node_3",
          "label": "focus on"
        },
        {
          "id": "edge_3",
          "from": "node_1",
          "to": "node_5",
          "label": "offered at"
        },
        {
          "id": "edge_4",
          "from": "node_1",
          "to": "node_6",
          "label": "semester"
        },
        {
          "id": "edge_5",
          "from": "node_1",
          "to": "node_7",
          "label": "includes"
        },
        {
          "id": "edge_6",
          "from": "node_7",
          "to": "node_8",
          "label": "step 1"
        },
        {
          "id": "edge_7",
          "from": "node_7",
          "to": "node_9",
          "label": "step 2"
        },
        {
          "id": "edge_8",
          "from": "node_7",
          "to": "node_10",
          "label": "step 3"
        },
        {
          "id": "edge_9",
          "from": "node_7",
          "to": "node_11",
          "label": "step 4"
        },
        {
          "id": "edge_10",
          "from": "node_7",
          "to": "node_12",
          "label": "step 5"
        },
        {
          "id": "edge_11",
          "from": "node_7",
          "to": "node_13",
          "label": "step 6"
        },
        {
          "id": "edge_12",
          "from": "node_3",
          "to": "node_4",
          "label": "includes"
        },
        {
          "id": "edge_13",
          "from": "node_9",
          "to": "node_4",
          "label": "focus on"
        },
        {
          "id": "edge_14",
          "from": "node_14",
          "to": "node_15",
          "label": "includes"
        },
        {
          "id": "edge_15",
          "from": "node_14",
          "to": "node_16",
          "label": "includes"
        },
        {
          "id": "edge_16",
          "from": "node_14",
          "to": "node_17",
          "label": "includes"
        },
        {
          "id": "edge_17",
          "from": "node_14",
          "to": "node_18",
          "label": "includes"
        },
        {
          "id": "edge_18",
          "from": "node_15",
          "to": "node_3",
          "label": "related to"
        },
        {
          "id": "edge_19",
          "from": "node_16",
          "to": "node_1",
          "label": "feedback on"
        },
        {
          "id": "edge_20",
          "from": "node_17",
          "to": "node_7",
          "label": "affects"
        },
        {
          "id": "edge_21",
          "from": "node_18",
          "to": "node_1",
          "label": "concerns"
        },
        {
          "id": "edge_22",
          "from": "node_19",
          "to": "node_20",
          "label": "includes"
        },
        {
          "id": "edge_23",
          "from": "node_19",
          "to": "node_21",
          "label": "includes"
        },
        {
          "id": "edge_24",
          "from": "node_19",
          "to": "node_22",
          "label": "includes"
        },
        {
          "id": "edge_25",
          "from": "node_19",
          "to": "node_23",
          "label": "includes"
        },
        {
          "id": "edge_26",
          "from": "node_19",
          "to": "node_24",
          "label": "includes"
        },
        {
          "id": "edge_27",
          "from": "node_19",
          "to": "node_25",
          "label": "includes"
        },
        {
          "id": "edge_28",
          "from": "node_19",
          "to": "node_26",
          "label": "includes"
        },
        {
          "id": "edge_29",
          "from": "node_19",
          "to": "node_27",
          "label": "includes"
        },
        {
          "id": "edge_30",
          "from": "node_20",
          "to": "node_28",
          "label": "evolution from"
        },
        {
          "id": "edge_31",
          "from": "node_28",
          "to": "node_29",
          "label": "led to"
        },
        {
          "id": "edge_32",
          "from": "node_29",
          "to": "node_30",
          "label": "enabled"
        },
        {
          "id": "edge_33",
          "from": "node_30",
          "to": "node_31",
          "label": "preceded"
        },
        {
          "id": "edge_34",
          "from": "node_31",
          "to": "node_32",
          "label": "led to"
        },
        {
          "id": "edge_35",
          "from": "node_19",
          "to": "node_33",
          "label": "explains"
        },
        {
          "id": "edge_36",
          "from": "node_19",
          "to": "node_34",
          "label": "process"
        },
        {
          "id": "edge_37",
          "from": "node_19",
          "to": "node_35",
          "label": "purpose"
        },
        {
          "id": "edge_38",
          "from": "node_19",
          "to": "node_36",
          "label": "challenges"
        },
        {
          "id": "edge_39",
          "from": "node_19",
          "to": "node_37",
          "label": "transition"
        },
        {
          "id": "edge_40",
          "from": "node_4",
          "to": "node_19",
          "label": "introduction to"
        },
        {
          "id": "edge_41",
          "from": "node_38",
          "to": "node_39",
          "label": "includes"
        },
        {
          "id": "edge_42",
          "from": "node_38",
          "to": "node_40",
          "label": "includes"
        },
        {
          "id": "edge_43",
          "from": "node_38",
          "to": "node_41",
          "label": "includes"
        },
        {
          "id": "edge_44",
          "from": "node_38",
          "to": "node_42",
          "label": "includes"
        },
        {
          "id": "edge_45",
          "from": "node_38",
          "to": "node_43",
          "label": "includes"
        },
        {
          "id": "edge_46",
          "from": "node_38",
          "to": "node_44",
          "label": "includes"
        },
        {
          "id": "edge_47",
          "from": "node_38",
          "to": "node_45",
          "label": "includes"
        },
        {
          "id": "edge_48",
          "from": "node_38",
          "to": "node_46",
          "label": "includes"
        },
        {
          "id": "edge_49",
          "from": "node_38",
          "to": "node_47",
          "label": "includes"
        },
        {
          "id": "edge_50",
          "from": "node_38",
          "to": "node_48",
          "label": "includes"
        },
        {
          "id": "edge_51",
          "from": "node_38",
          "to": "node_49",
          "label": "includes"
        },
        {
          "id": "edge_52",
          "from": "node_22",
          "to": "node_38",
          "label": "detailed in"
        },
        {
          "id": "edge_53",
          "from": "node_19",
          "to": "node_38",
          "label": "explores"
        }
      ]
    },
    "graph_building_complete": true
  }
}